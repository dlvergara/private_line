defmodule PrivateLine.V1.KeysController do
  use PrivateLine.Web, :controller

  def index(conn, _params) do
    private_key = "-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----\n"
    public_key  = "-----BEGIN PUBLIC KEY-----\nMIIEIjANBgkqhkiG9w0BAQEFAAOCBA8AMIIECgKCBAEAnT0W4uEcu2ymjGbYmRJ+\n7ZpXbdKKylKAfNmh7U/MXPs8/Q6IUygAaVA+zZt8D4BC9oLf8NIQeatkbxOM9aNZ\nCBI8capB87sW4q98WQ86VtACcJQ/D8tIsa1BNOtRguhDx/Wq2vzor0Bra2o1Ai9P\n0/T9bTcZuzdB0Qp7/tTGF7G7dJ00hupKiUBSpKGB9MU480lGsBEP5werq4NH8PBH\nBGs8LJcwslOw0XXcmX+SjDpJ2ACp3vV4mem4Bb9pKN1Z/L7avdVVzLyiIL0yTDbt\n3i7hXlpzItlnNj+kx1V9Ae1HRx1DYqBXac6ZPOhzDDLP0pDu0xrwIxBx9eQtMv8N\n4gow5Sw8LF6quFNi/6XGAdEbhwliF0XKr4TJjNh99i6kAtRyCSINv9r/NozUdeYA\nVGwTLo/IXpbqOn/+qdNV+UMMeAp/pVg1KkhBf0VzYVoCZGSpXTrxS3IQzMaB9YFv\nJFuQtJbDDSsiAmeHhMc4hUMZ68VSAhyBn+1E60kuaDBbXb2YBdGgcqH+D0Dsp52O\n/4HCpf7KriMlGdlIZcspzvVgU/DblE8BqKS7hUatOi5wqHY2hrMLidrCDJcUAcXr\nS4eWDXfl7LJfddIqNKQQeKynL5LH6sHJyXdC0LMYTS/CARPt28DdYPCJhVjIXALb\naiwA8kRkseOCBvoNI3LAxu6X7BcnQLpuVd8ANHnVdNItugHproAqfZyz17GZ3jDz\nRWBPLjbBCSPFXiw8y/75Gixd2vR4lvcJ8eco3skFReW4jI9/xo64fmN3zHs9UmZi\nZCcYzBBRkqeh3d5iwFVnL1j7TBCDUMJJYH4KeYexxNztIfjqd5lsVu39OBZKoBSr\n5nY/TL+fEZVSOEXkzwYn6Bs4y6J3HQ2nkTunFjoMlBXE1vi9RSQdWz993mkToSnj\nZUZ2/phNSNlEA33Hq75VQeedPYwMo2KhbDJfdhm0chAsIkDkc23p/yaHZAjUKzYZ\n6rgEn9p3CB7ILxwi/Xt6WrbTo1MkIw0/lmblCKrX0VxfKXiZiTGrkiU7rWVbchzn\npwvYUrYeUkF5f+mY84xAwE3gCHCq4zvdep7CuPoV+Ky+y5mbUA6K3pZpbZ/a17dg\nIb+mEI2/kC2Hesn6PaSxt7d4dyfMFnsllAfxPPcLvQ5/B1dhyp+xRDXe8S4OuKni\ndHpft+BRJgnX3Ahv4XdF1UHBwpdalsOvCTc9Khw/M3xSL8oqWVWQmy1Ha7yoq7pS\ncgPB6Aa56H7HpbjU7f9vEp34aiOw3J9sY+zFsdQfk6ztHCRY51wFjiPi+ZguZOM7\n1dTH0PIGi7kjcrc4VkKFggM4M4J5D/A3MUx5SXJxCImqFG0BKrcOT+3CkeiEZQ1j\nZQIDAQAB\n-----END PUBLIC KEY-----\n"
    msg         = Poison.encode!(%{"billing_first_name" => "this.buyerinfo.name.value","billing_last_name" => "empty","billing_address1" => "this.buyerinfo.address.value","billing_address2" => "","billing_city" => "this.buyerinfo.city.value","billing_country" => "this.buyerinfo.country.value","billing_state" => "this.buyerinfo.state.value","billing_zip" => "this.buyerinfo.zip.value","billing_phone" => "this.buyerinfo.phone.value", "billing_email" => "this.buyerinfo.email.value","shipping_first_name" => "this.shippinginfo.name.value","shipping_last_name" => "LudeÃ±a","shipping_address1" => "this.shippinginfo.address.value","shipping_city" => "this.shippinginfo.city.value","shipping_country" => "this.shippinginfo.country.value","shipping_state" => "this.shippinginfo.state.value","shipping_zip" => "this.shippinginfo.zip.value","shipping_phone" => "this.buyerinfo.phone.value","shipping_email" => "this.buyerinfo.email.value","card" => "this.encrypted_card"})
    encrypted_msg = ""
    decrypted_msg = ""
    # encrypted_msg = "EtSqKSR/bCnIT3N5njjupjKPVCCdjlkJ9NDRKQyq3/zfkB6uANzB94zAK/MBdSfDRh9ashKq74zHsie0O7rthy1dD0zZp8a0OF2WvZUBDPt7DRPIBj7xQiv3z5tTXA/eFBdNxCtDEKsD/y6RJ1S2/iJBukCaOQ3PEWe+HWFIr372sNZVVHQ27dJ7frMalSyjZtE1jpLXNXh03bvcWrG17sEu09tTPZb5QlK/WAdH+Y8pVhT8lYC/BTutzVoqlplm5FdSdFmrxZM0hyLN7/ScDYKLOtNIB9WUwbG36x75cOx2E+crEGHCBGUhJcXN/BzivUTtJkK++f4CRbOwnIc1MVg25BMXrGDsq6SdENbMpodbDFD0zRCWYuIDjTT7n6EOSb0fUwbw4uWJ14I4zTy4GuoOy3K80esBIfL2GKqefZGNZMJhJFDdugI/faWGiz4gM3s7WImZHt2NwG6Zy+GUHsaYoOWG4VcHOoj2tprFkewOXoie9cPrwcMTM4MBSluNLSAnHDnp43TIzOYV2S2zyMvufeHov7+On2Zm8tiQZhmylnHXa4BUdhbo1c8d5In7ytY0dJHHD1QsOg/P8oAhRxsrB+kKj8OoFTqZhAGe0H0h4zFnQ+Ox4bqGm2pBVeRfEMZ56QhS3RuHFgh9gFZS1CnnLjaS7fAqWujhc+Kjj6wyCBc0HMN7O+yl7uCgxlcMykukpk8lWg9ggUCzWl+s1ObdIFCoqoqaZ2vceGrklmZ3w+V4PpcS8Z5Uzd/M+8xQyHA53+OKiwXg8IkwsB1lpp/Ku2Z7R/WToliOUkT37cq/FjnTdu80Oua9Pr3hDGqL0ewiJ6n2+G3co2XVBGeFHJwmHRhUOj3COML1SlghL0mmeWRxbnLp9pqqV6CIsY67fC8fYhJ/kMBbCPvoE8qfzCJnjEb7hqYV9FU1jsOJLrybmUhmBm+KqWm59huQB+KP0RphtPRA8rdFuw0qz8uAhY8BtRG2jKfR28y/LGVX0hHNCfjt840ExAC3BzkwT8fSXXvcOBbBSYsNAvjFCStTZ65/ZtIXPkFc/M5GhSx+slLIKFLbsFExVYPUDb/mINqqzWwhxoL0WCdkW60JRv9t6g3QuRKFLORwa0WOAjZ2wJtz3hXtamVGFTzQzD1My80hwLfx+S1DwDJ6jPU5HXcJe/dRxGX6tE5kvWu8kcM1NFSeQvXctu9OXbcwp1u6pgNV0dPM2mR5zk++iNlD9wu5D/iwzYfoL5SqPSIv0p6N3GjI3z6o/JQao38WhWhca+efeQkU9r0lr2lVtNYCCvE3YESKmUDbm0QiqBt6rCuhoXfT2awuwYKVx/pPtK90SWh4TDBFqn0GA3/59Jx3X5yYRQ=="
    {:ok, encrypted_msg} = RsaEx.encrypt(msg, public_key)
    {:ok, decrypted_msg} = RsaEx.decrypt(encrypted_msg, private_key)
    response = %{public_key: public_key,
                private_key: private_key,
                        msg: msg,
              encrypted_msg: encrypted_msg,
              decrypted_msg: decrypted_msg}
    render conn, %{response: response}
  end

  def create(conn, params) do
    %{"destination_url" => destination_url, "destination_headers" => destination_headers} = params
    case PrivateLine.Decrypt.decrypt(params) do
      {:ok, res} ->
        case PrivateLine.MyHttp.post(destination_url, res, destination_headers) do
          # TODO mejorar PrivateLine.MyHttp.post() para parsear la respuesta de HTTPoison
          {:ok, res} ->
            conn
            |> render(%{response: res})
          {:error, error} ->
            conn
            |> put_status(400)
            |> render(%{response: error})
        end
      :error ->
        conn
        |> put_status(400)
        |> render %{response: %{error: "400 Bad Request."}}
    end
  end
end
